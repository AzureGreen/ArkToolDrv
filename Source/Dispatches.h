#ifndef CXX_Dispatches_H
#define CXX_Dispatches_H

#include <ntifs.h>

//#include "Private.h"
#include "ProcessCore.h"
#include "ProcessThread.h"
#include "ProcessModule.h"
#include "ProcessPrivilege.h"
#include "ProcessHandle.h"
#include "ProcessWindow.h"
#include "ProcessMemory.h"
#include "ModuleCore.h"
#include "SysCallback.h"
#include "SysIoTimer.h"
#include "SysDpcTimer.h"
#include "SysThread.h"
#include "SysFilterDriver.h"



//  π”√Method_Buffer
/*
#define CTL_CODE( DeviceType, Function, Method, Access ) (                 \
((DeviceType) << 16) | ((Access) << 14) | ((Function) << 2) | (Method) \
*/

#define IOCTL_PROC_SEND_SELF_PID  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_GET_PROCESS_COUNT  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_ENUM_PROCESS_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_THREAD  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_MODULE  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_PRIVILEGE  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PRIVILEGE_ADJUST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_HANDLE  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_WINDOW  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x809, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_MEMORY  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x810, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_PROC_PROCESS_KILL  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x811, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
//////////////////////////////////////////////////////////////////////////
#define IOCTL_MODU_ENUM_MODULE_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x812, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_MODU_UNLOAD_MODULE  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x813, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
//////////////////////////////////////////////////////////////////////////
#define IOCTL_SYS_ENUM_CALLBACK_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x814, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_REMOVE_CALLBACK_ITEM  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x815, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_ENUM_IOTIMER_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x816, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_REMOVE_IOTIMER_ITEM  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x817, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_RUNORSTOP_IOTIMER_ITEM  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x818, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_ENUM_DPCTIMER_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x819, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_REMOVE_DPCTIMER_ITEM  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x820, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_ENUM_SYSTEMTHREAD_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x821, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_ENUM_FILTERDRIVER_LIST  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x822, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)
#define IOCTL_SYS_REMOVE_FILTERDRIVER_ITEM  (UINT32)CTL_CODE(FILE_DEVICE_UNKNOWN, 0x823, METHOD_NEITHER, FILE_READ_ACCESS | FILE_WRITE_ACCESS)





NTSTATUS
IoControlPassThrough(PDEVICE_OBJECT DeviceObject, PIRP Irp);


#endif // !CXX_Dispatches_H